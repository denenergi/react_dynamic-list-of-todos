{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelect","todoSelectedId","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilterSelected","textInput","useState","statusSelect","setStatusSelect","input","setInput","toLowerCase","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","selectedUser","setSelectedUser","useEffect","userId","user","href","name","App","setTodos","completedFilter","setCompletedFilter","setTodoSelectedId","searchQuery","setSearchQuery","filteredArraySelection","useMemo","filter","checkQuery","includes","find","element","result","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.220da8be.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onTodoSelect: (id: number) => void;\n  todoSelectedId: number | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, onTodoSelect, todoSelectedId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo.id)}\n              >\n                <span className=\"icon\">\n                  {todoSelectedId === todo.id\n                    ? (<i className=\"far fa-eye-slash\" />)\n                    : (<i className=\"far fa-eye\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\n\ntype Props = {\n  onFilterSelected: (nameFilter: string) => void;\n  textInput: (text: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilterSelected, textInput,\n}) => {\n  const [statusSelect, setStatusSelect] = useState('all');\n  const [input, setInput] = useState('');\n\n  onFilterSelected(statusSelect);\n  textInput(input.toLowerCase());\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={statusSelect}\n            onChange={(event) => setStatusSelect(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={event => setInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setInput('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo | null\n  onClose: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, onClose,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo?.userId || 0)\n      .then(user => setSelectedUser(user));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useMemo, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [completedFilter, setCompletedFilter] = useState('all');\n  const [todoSelectedId, setTodoSelectedId] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredArraySelection = useMemo(() => {\n    return todos.filter(todo => {\n      const checkQuery = todo.title.toLowerCase().includes(searchQuery);\n\n      switch (completedFilter) {\n        case 'all':\n          return checkQuery;\n        case 'active':\n          return checkQuery && !todo.completed;\n        case 'completed':\n          return checkQuery && todo.completed;\n        default:\n          return true;\n      }\n    });\n  }, [todos, searchQuery, completedFilter]);\n\n  const onClose = () => {\n    setTodoSelectedId(0);\n  };\n\n  const todo = todos.find(element => element.id === todoSelectedId) || null;\n\n  useEffect(() => {\n    getTodos().then(result => {\n      setTodos(result);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterSelected={setCompletedFilter}\n                textInput={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={filteredArraySelection}\n                    onTodoSelect={setTodoSelectedId}\n                    todoSelectedId={todoSelectedId}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoSelectedId !== 0\n        && (\n          <TodoModal\n            todo={todo}\n            onClose={onClose}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}