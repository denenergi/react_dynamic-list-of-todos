{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelect","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilterSelected","textInput","useState","statusSelect","setStatusSelect","input","setInput","useEffect","toLowerCase","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","onClose","selectedUser","setSelectedUser","userId","user","href","name","App","setTodos","filterSelection","setfilterSelection","setTodo","search","setSearch","filteredArraySelection","array","filter","todosArray","element","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50d36a2e.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onTodoSelect: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onTodoSelect }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onTodoSelect(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\n\ntype Props = {\n  onFilterSelected: (nameFilter: string) => void;\n  textInput: (text: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilterSelected, textInput,\n}) => {\n  const [statusSelect, setStatusSelect] = useState('');\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    onFilterSelected(statusSelect);\n  }, [statusSelect]);\n\n  useEffect(() => {\n    textInput(input.toLowerCase());\n  }, [input]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={statusSelect}\n            onChange={(event) => setStatusSelect(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={event => setInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setInput('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getTodosActive = () => (\n  getTodos().then(array => array.filter(todo => todo.completed === false))\n);\nexport const getTodosCompleted = () => (\n  getTodos().then(array => array.filter(todo => todo.completed === true))\n);\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo\n  onClose: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(user => setSelectedUser(user));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getTodosActive, getTodosCompleted } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterSelection, setfilterSelection] = useState('');\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [search, setSearch] = useState('');\n\n  const filteredArraySelection = () => {\n    if (filterSelection === 'active') {\n      return getTodosActive();\n    }\n\n    if (filterSelection === 'completed') {\n      return getTodosCompleted();\n    }\n\n    return getTodos();\n  };\n\n  const onClose = () => {\n    setTodo(null);\n  };\n\n  useEffect(() => {\n    filteredArraySelection()\n      .then(todosArray => setTodos(todosArray.filter(element => element.title.includes(search))));\n  }, [filterSelection, search]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterSelected={setfilterSelection}\n                textInput={setSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos\n                ? <TodoList todos={todos} onTodoSelect={setTodo} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todo && <TodoModal todo={todo} onClose={onClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}